// 1. Fa√ßa cinco programas, um para cada opera√ß√£o aritm√©tica b√°sica. Seu programa deve ter duas constantes, a e b, definidas no come√ßo com os valores que ser√£o operados. Fa√ßa programas para:
// Adi√ß√£o (a + b)
// Subtra√ß√£o (a - b)
// Multiplica√ß√£o (a * b)
// Divis√£o (a / b)
// M√≥dulo (a % b)



// let a = 10;
// let b = 2;

// let resultado;

// //1. Adi√ß√£o
// resultado = (a + b);
// console.log("O Exerc√≠cio 1 deu: " + resultado);

// //2. Subtra√ß√£o
// resultado = (a - b);
// console.log("O Exerc√≠cio 2 deu: " + resultado);

// //3. Multiplica√ß√£o
// resultado = (a * b);
// console.log("O Exerc√≠cio 3 deu: " + resultado);

// //4. Divis√£o
// resultado = (a / b);
// console.log("O Exerc√≠cio 4 deu: " + resultado);

// //5. M√≥dulo - O resto da divis√£o
// resultado = (a % b);
// console.log("O Exerc√≠cio 5 deu: " + resultado);



//2. Fa√ßa um programa que retorne o maior de dois n√∫meros. Defina no come√ßo do programa duas constantes com os valores que ser√£o comparados.

// const a = 55
// const b = 9

// let maiorNumero;

// if (a > b) {
//   console.log("a √© maior que b");
// } else {
//   console.log("b √© maior que a");
// }

//3. Fa√ßa um programa que retorne o maior de tr√™s n√∫meros. Defina no come√ßo do programa tr√™s constantes com os valores que ser√£o comparados.

// const a = 111;
// const b = 4;
// const c = 3;

// if (a > b && a > c) {
//   console.log("a √© o maior dos tr√™s n√∫meros");
// } else if (b > a && b > c) {
//   console.log("b √© o maior dos tr√™s n√∫meros");
// } else {
//   console.log("c √© o maior dos tr√™s n√∫meros");
// }

//4. Fa√ßa um programa que, dado um valor definido numa constante, retorne "positive" se esse valor for positivo, "negative" se for negativo e "zero" caso contr√°rio.

// const hiddenNumber = 0;

// if (hiddenNumber > 0) {
//   console.log('positive');
// } else if (hiddenNumber < 0) {
//   console.log('negative');
// } else {
//   console.log('zero');
// }

//5. üöÄ Fa√ßa um programa que defina tr√™s constantes com os valores dos tr√™s √¢ngulos internos de um tri√¢ngulo. Retorne true se os √¢ngulos representarem os √¢ngulos de um tri√¢ngulo e false, caso contr√°rio. Se algum √¢ngulo for inv√°lido o programa deve retornar uma mensagem de erro.
// Para os √¢ngulos serem de um tri√¢ngulo v√°lido, a soma dos tr√™s devem ser 180 graus.
// Um √¢ngulo ser√° considerado inv√°lido se n√£o tiver um valor positivo.

// const angleA = 40;
// const angleB = 45;
// const angleC = 45;
// let sumOfAllAngles = (angleA + angleB + angleC);

// if (angleA < 0 || angleB < 0 || angleC < 0) {
//   console.log("Tri√¢ngulo inv√°lido, n√£o existem √¢ngulos negativos");

// } else if (sumOfAllAngles === 180) {
//   console.log("true");

// } else {
//   console.log("false");
// }


//6. Escreva um programa que receba o nome de uma pe√ßa de xadrez e retorne os movimentos que ela faz.
// Como desafio, fa√ßa o programa funcionar tanto se receber o nome de uma pe√ßa com letras mai√∫sculas quanto com letras min√∫sculas, sem aumentar a quantidade de condicionais.
// Como dica, voc√™ pode pesquisar uma fun√ß√£o que faz uma string ficar com todas as letras min√∫sculas (lower case).
// Se a pe√ßa passada for inv√°lida, o programa deve retornar uma mensagem de erro.
// Exemplo: bishop (bispo) -> diagonals (diagonais)


// const chessPiece = 'pawn';

// switch (chessPiece.toLowerCase()) {
//   case 'rei', 'king':
//     console.log('Rei (king)-> movimento na horizontal, vertical e diagonal, 1 casa por movimento.');
//     break;
//   case 'bispo', 'bishop':
//     console.log('Bispo (bishop)-> movimento diagonal, sem limite de casas por movimento.');
//     break;
//   case 'rainha', 'queen':
//     console.log('Rainha (queen)-> movimento na horizontal, vertical e diagonal, sem limite de casas por movimento.');
//     break;
//   case 'cavalo', 'knight':
//     console.log('Cavalo (knight) -> movimento em L, fixo 3 por 2 casas a cada movimento, tanto na horizontal quanto na vertical, podendo pular sobre as pe√ßas.');
//     break;
//   case 'torre', 'rook':
//     console.log('Torre (rook) -> movimento horizontal e vertical, sem limite de casas por movimento.');
//     break;
//   case 'pe√£o', 'pawn':
//     console.log("Pe√£o (pawn) -> movimento vertical, uma casa por movimento.");
//     break;
//   default:
//     console.log('Erro, pe√ßa inv√°lida!');
//     break;
// };



// 7. Escreva um programa que converte uma nota dada em porcentagem (de 0 a 100) em conceitos de A a F. Siga essas regras:
// Porcentagem >= 90 -> A
// Porcentagem >= 80 -> B
// Porcentagem >= 70 -> C
// Porcentagem >= 60 -> D
// Porcentagem >= 50 -> E
// Porcentagem < 50 -> F
// O programa deve retornar uma mensagem de erro e encerrar se a nota passada for menor que 0 ou maior que 100.


// const grade = 76;

// if (grade < 0 || grade > 100) {
//   console.log("Erro, nota incorreta!");
// } else if (grade >= 90) {
//   console.log("A");
// } else if (grade >= 80) {
//   console.log("B");
// } else if (grade >= 70) {
//   console.log("C");
// } else if (grade >= 60) {
//   console.log("D");
// } else if (grade >= 50) {
//   console.log("E");
// } else {
//   console.log("F");
// }



// 8. üöÄ Escreva um programa que defina tr√™s n√∫meros em constantes e retorne true se pelo menos uma das tr√™s for par. Caso contr√°rio, ele retorna false.
// Bonus: use somente um if.

// const numA = 39;
// const numB = 15;
// const numC = 13;

// let isEven = false;

// if (numA % 2 === 0 || numB % 2 === 0 || numC % 2 === 0) {
//   isEven = true;
// };

// console.log(isEven);


// 9. Escreva um programa que defina tr√™s n√∫meros em constantes e retorne true se pelo menos uma das tr√™s for √≠mpar. Caso contr√°rio, ele retorna false.
// Bonus: use somente um if.

// const numA = 38;
// const numB = 11;
// const numC = 13;

// let isOdd = false;

// if (numA % 2 !== 0 || numB % 2 !== 0 || numC % 2 !== 0) {
//   isOdd = true;
// };

// console.log(isOdd);

// 10 . Escreva um programa que se inicie com dois valores em duas constantes diferentes: o custo de um produto e seu valor de venda. A partir dos valores, calcule quanto de lucro (valor de venda descontado o custo do produto) a empresa ter√° ao vender mil desses produtos.
// Atente que, sobre o custo do produto, incide um imposto de 20%.
// Seu programa tamb√©m deve emitir uma mensagem de erro e encerrar caso algum dos seus valores de entrada seja menor que zero.
// O lucro de um produto √© o resultado da subtra√ß√£o do valor de venda pelo custo do mesmo, sendo que o imposto de 20% tamb√©m faz parte do valor de custo.
// valorCustoTotal = valorCusto + impostoSobreOCusto
// lucro = valorVenda - valorCustoTotal (lucro de um produto)

// const custo = 1;
// const valorVenda = 2;
// const imposto = 0.2;
// const custoTotal = custo + imposto;
// const produtosVendidos = 1000;

// let lucro = valorVenda - custoTotal;
// let lucroAtual = lucro * 1000;

// if (custo < 0 || valorVenda < 0 || imposto < 0 || produtosVendidos < 0) {
//   console.log("Erro, o custo, valor de venda ou n√∫mero de produtos vendidos n√£o pode ser negativo.")
// } else {
//   console.log("O lucro sobre a venda de " + produtosVendidos + " produtos √© " + lucroAtual);
// }


// 11. Uma pessoa que trabalha de carteira assinada no Brasil tem descontados de seu sal√°rio bruto o INSS e o IR. Fa√ßa um programa que, dado um sal√°rio bruto, calcule o l√≠quido a ser recebido.
// A nota√ß√£o para um sal√°rio de R$1500,10, por exemplo, deve ser 1500.10. Para as faixas de impostos, use as seguintes refer√™ncias:
// INSS (Instituto Nacional do Seguro Social)
// Sal√°rio bruto at√© R$ 1.556,94: al√≠quota de 8%
// Sal√°rio bruto de R$ 1.556,95 a R$ 2.594,92: al√≠quota de 9%
// Sal√°rio bruto de R$ 2.594,93 a R$ 5.189,82: al√≠quota de 11%
// Sal√°rio bruto acima de R$ 5.189,82: al√≠quota m√°xima de R$ 570,88
// IR (Imposto de Renda)
// At√© R$ 1.903,98: isento de imposto de renda
// De R$ 1.903,99 a 2.826,65: al√≠quota de 7,5% e parcela de R$ 142,80 a deduzir do imposto
// De R$ 2.826,66 a R$ 3.751,05: al√≠quota de 15% e parcela de R$ 354,80 a deduzir do imposto
// De R$ 3.751,06 a R$ 4.664,68: al√≠quota de 22,5% e parcela de R$ 636,13 a deduzir do imposto
// Acima de R$ 4.664,68: al√≠quota de 27,5% e parcela de R$ 869,36 a deduzir do imposto.
// Exemplo: Uma pessoa possui o sal√°rio bruto de R$ 3.000,00. O c√°lculo ser√°:
// O sal√°rio bruto est√° entre R$ 2.594,93 e R$ 5.189,82, ent√£o sua al√≠quota para INSS √© de 11%. O INSS ser√° 11% de R$ 3.000, ou seja, R$ 330,00.
// Para descobrir o sal√°rio-base, subtraia do sal√°rio bruto a al√≠quota do INSS: R$ 3.000,00 - R$ 330,00 = R$ 2.670,00.
// Para pegar o valor do IR, temos um sal√°rio (j√° deduzido o INSS) entre R$ 1.903,99 e 2.826,65, sendo a al√≠quota, ent√£o, de 7.5%, com parcela de R$ 142,80 a deduzir do imposto. Assim, temos:
// R$ 2.670,00: sal√°rio com INSS j√° deduzido;
// 7.5%: al√≠quota de imposto de renda;
// R$ 142,80 parcela a se deduzir do imposto.
// Fazendo a conta, temos: (7,5% de R$ 2.670,00) - R$ 142,80 = R$ 57,45
// O √∫ltimo c√°lculo para conseguir o sal√°rio l√≠quido √© R$ 2.670,00 - R$ 57,45 (sal√°rio-base - valor IR) = R$ 2.612,55.
// Resultado: R$ 2.612,55.
// Dica: que tal identificar as al√≠quotas com vari√°veis de nomes explicativos?